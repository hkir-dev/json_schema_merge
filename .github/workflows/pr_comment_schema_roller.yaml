name: Comment Artifact URL on PR

on:
  workflow_run:
    types:
      - "completed"
    workflows:
      - "Schema Roller"

jobs:
  comment-on-pr:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |
          
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"
          
          ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .archive_download_url")
          
          echo "ARTIFACT URL: $ARTIFACT_URL"
          ARTIFACT_URLS="$(echo "$input" | tr '\n' '@')"
          ARTIFACT_URL_1="$(echo "$ARTIFACT_URLS" | cut -d'@' -f1)"
          ARTIFACT_1_ID="$(echo "$ARTIFACT_URL_1" | cut -d'/' -f9)"
          ARTIFACT_URL_2="$(echo "$ARTIFACT_URLS" | cut -d'@' -f2)"
          ARTIFACT_2_ID="$(echo "$ARTIFACT_URL_2" | cut -d'/' -f9)"
          
          echo "ARTIFACT URL 1: $ARTIFACT_URL_1"
          echo "ARTIFACT_1_ID=ARTIFACT_1_ID" >> "$GITHUB_ENV"
          echo "ARTIFACT URL 2: $ARTIFACT_URL_2"
          echo "ARTIFACT_2_ID=ARTIFACT_2_ID" >> "$GITHUB_ENV"
          
          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
          
          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "Head sha: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.11.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: schema_roller.yaml
          run_id: ${{ github.event.workflow_run.id }}

#      - name: Read the pr_num file
#        id: pr_num_reader
#        uses: juliangruber/read-file-action@v1.0.0
#        with:
#          path: ./pr_num/pr_num.txt

#      - name: Read the pr_num file
#        id: pr_num_reader
#        uses: actions/download-artifact@v2
#        with:
#          name: pr_num
#          path: ./pr_num.txt

      - name: Set pr_num variables
        run: |
          cat pr_num/pr_num.txt 
          PR_NUM=$(cat pr_num/pr_num.txt)
          echo "PR_NUM: $PR_NUM"
          echo "PR_NUM=$PR_NUM" >> "$GITHUB_ENV"

      - name: Echo Artifact URL & PR Info
        run: |
          echo "content: ${{ env.PR_NUM }}"
          echo "art1: ${{ env.ARTIFACT_URL_1 }}"
          echo "art2: ${{ env. ARTIFACT_URL_2 }}"

      - name: Schema Files Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/\
              runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.PR_NUM }}
#          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          body: |-
            [schemas.zip](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ env.PREVIOUS_JOB_ID }}/artifacts/${{ env.ARTIFACT_1_ID }})

      - name: Prepare BICAN schema doc comment
        run: "echo \"Schema documentations: \n<details>\n <summary> BICAN schema </summary> \n\" > schema-comment.md; cat schema/extension_schema.md >>schema-comment.md"

      - name: Prepare CAP schema doc comment
        run: "echo \"\n</details>\n\n<details>\n <summary> CAP schema </summary> \n\" >> schema-comment.md; cat schema/general_schema.md >>schema-comment.md"

      - name: Schema Docs Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/\
              runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.PR_NUM }}
          body-path: schema-comment.md
